/*Ejecutar antes de las consultas ya que si no da */
SET SCHEMA VIDEOCLUB;
/*1-Devuelve todas las películas*/
SELECT * FROM Movies;
​​​​​​​
/*2-Devuelve todos los géneros de las películas*/
SELECT * FROM GENRE;

SELECT GENRE.GENRE_NAME FROM MOVIES JOIN GENRE ON MOVIES.MOVIE_ID = GENRE.GENRE_ID;

/*3-Devuelve el nombre de todas las películas y el nombre del estudio que las ha realizado*/
SELECT MOVIES.MOVIE_NAME,STUDIO.STUDIO_NAME
FROM MOVIES
JOIN STUDIO ON MOVIES.STUDIO_ID = STUDIO.STUDIO_ID;

/*4-Devuelve el nombre y la edad de todos los directores menores o iguales de 50 años que estén vivos
 * Si no se le mete el year delante del DateDiff hace cosas raras
 * */
SELECT DIRECTORS.DIRECTOR_NAME,  DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())
FROM DIRECTORS
WHERE DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())  <= 50 AND DIRECTORS.DIRECTOR_DEAD_DATE IS NULL;

/*5-Devuelve el nombre y la edad de todos los actores menores de 50 años que hayan fallecido*/
SELECT DIRECTORS.DIRECTOR_NAME,  DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,DIRECTORS.DIRECTOR_DEAD_DATE)
FROM DIRECTORS
WHERE DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,DIRECTORS.DIRECTOR_DEAD_DATE)  <= 50 AND DIRECTORS.DIRECTOR_DEAD_DATE IS NOT NULL;

/*6-Devuelve el nombre de todos los directores menores o iguales de 40 años que estén vivos*/
SELECT DIRECTORS.DIRECTOR_NAME,  DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())
FROM DIRECTORS
WHERE DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())  <= 40 AND DIRECTORS.DIRECTOR_DEAD_DATE IS NULL;

/*7-Devuelve la lista de todos los estudios de grabación que estén activos*/
	SELECT * FROM STUDIO WHERE STUDIO_ACTIVE IS TRUE;

/*8-Devuelve el nombre y el año de todas las películas que han sido producidas por un estudio que actualmente no esté activo*/
	SELECT MOVIES.MOVIE_NAME ,YEAR(MOVIES.MOVIE_LAUNCH_DATE) AS AÑO
	FROM MOVIES JOIN STUDIO ON MOVIES.STUDIO_ID = STUDIO.STUDIO_ID
	WHERE STUDIO_ACTIVE IS FALSE;

/*9-Devuelve una lista de los 20 últimos miembros en anotarse al videoclub*/
	SELECT *
	FROM MEMBERS
	ORDER BY MEMBER_DISCHARGE_DATE  DESC LIMIT 20;

/*10-Devuelve una lista de las últimas 10 películas que se han alquilado
 * Si se ordena por el member_movie_rental_id las fechas no coinciden para se las ultimas alquiladas
 * */
	SELECT *
	FROM MOVIES JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID
	ORDER BY MEMBER_RENTAL_DATE  DESC LIMIT 10;

/*11-Indica cual es el nombre del director del que más películas se han alquilado
 * En este caso en vez de ordenar por el alias se puede ordenas poniendo ORDER BY 2 osea el numero que
 * representa el elemento/columna
 * */
	SELECT DIRECTORS.DIRECTOR_NAME ,COUNT(MEMBERS_MOVIE_RENTAL.MEMBER_MOVIE_RENTAL_ID) AS numero_alquileres
	FROM MOVIES JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	GROUP BY DIRECTORS.DIRECTOR_ID
	ORDER BY numero_alquileres DESC LIMIT 1;


/*12-Indica cuantos premios han ganado cada uno de los estudios con las películas que han creado*/
	SELECT STUDIO.STUDIO_NAME, COUNT(AWARDS.AWARD_ID)
	FROM AWARDS JOIN MOVIES ON AWARDS.MOVIE_ID = MOVIES.MOVIE_ID JOIN STUDIO ON MOVIES.STUDIO_ID = STUDIO.STUDIO_ID
	GROUP BY STUDIO.STUDIO_ID;

/*13-Indica cuántas películas ha realizado cada director antes de cumplir 41 años*/
	SELECT DIRECTORS.DIRECTOR_NAME ,COUNT(MOVIES.MOVIE_ID)
	FROM MOVIES JOIN DIRECTORS ON MOVIES.DIRECTOR_ID  = DIRECTORS.DIRECTOR_ID
	WHERE MOVIES.MOVIE_LAUNCH_DATE < DIRECTORS.DIRECTOR_BIRTH_DATE + INTERVAL '41' YEAR AND DIRECTORS.DIRECTOR_NAME
	GROUP BY DIRECTORS.DIRECTOR_ID;

/*14-Indica la edad media de los directores vivos*/
	SELECT AVG(DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())) AS EDAD_MEDIA
	FROM DIRECTORS
	WHERE DIRECTORS.DIRECTOR_DEAD_DATE IS NULL;

/*15-Indica la edad media de los actores que han fallecido*/
	SELECT AVG(DATEDIFF(YEAR ,DIRECTORS.DIRECTOR_BIRTH_DATE,CURDATE())) AS EDAD_MEDIA_FALLECIDOS
	FROM DIRECTORS
	WHERE DIRECTORS.DIRECTOR_DEAD_DATE IS NOT NULL;
/*16-Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película
 * SIN TERMINAR
 *
 * Info:
 * Tienen bastantes subconsultas
 * */

	declare ID Integer;



	SELECT DIRECTORS.DIRECTOR_ID AS a,GENRE.GENRE_NAME
	FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	WHERE GENRE.GENRE_ID = (SELECT GENRE.GENRE_ID
		FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = a
		GROUP BY GENRE.GENRE_ID
		ORDER BY COUNT(GENRE.GENRE_ID)  DESC LIMIT 1);

	SELECT DIRECTORS.DIRECTOR_NAME,GENRE.GENRE_NAME
	FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	GROUP BY DIRECTORS.DIRECTOR_ID, GENRE.GENRE_ID
	ORDER BY DIRECTORS.DIRECTOR_NAME;

SELECT GENRE.GENRE_ID
FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
WHERE DIRECTORS.DIRECTOR_ID = 0
GROUP BY GENRE.GENRE_ID
ORDER BY COUNT(GENRE.GENRE_ID);

SELECT DIRECTORS.DIRECTOR_ID  ID ,GENRE.GENRE_NAME
	FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID AS SUPER_JOIN
	WHERE GENRE.GENRE_ID = (SELECT GENRE.GENRE_ID
		FROM GENRE JOIN MOVIES ON GENRE.GENRE_ID = MOVIES.GENRE_ID JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = ID
		GROUP BY GENRE.GENRE_ID
		ORDER BY COUNT(GENRE.GENRE_ID)  DESC LIMIT 1)
	 ;

/*17-Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas
 * IGUAL QUE LA ANTERIOR
 * */



/*18-Indica cuál es la media de duración de las películas de cada director*/
	SELECT DIRECTORS.DIRECTOR_NAME, AVG(MOVIES.MOVIE_DURATION)
	FROM MOVIES JOIN DIRECTORS  ON MOVIES.DIRECTOR_ID  = DIRECTORS.DIRECTOR_ID
	GROUP BY DIRECTORS.DIRECTOR_ID, DIRECTOR_ID ;

/*19-Indica cuál es la el nombre y la duración mínima de las películas que han sido alquiladas en los últimos 2 años por los miembros del videoclub*/
	SELECT  MOVIES.MOVIE_NAME , MOVIES.MOVIE_DURATION
	FROM MOVIES JOIN MEMBERS_MOVIE_RENTAL ON MOVIES.MOVIE_ID = MEMBERS_MOVIE_RENTAL.MOVIE_ID
	WHERE MEMBERS_MOVIE_RENTAL.MEMBER_RENTAL_DATE  > CURDATE()  - INTERVAL '2' YEAR;

/*20-Indica cuál fue la primera película que alquilaron los miembros del videoclub cuyos teléfonos tengan como último dígito el ID de alguna nacionalidad
 * Sin acabar
 * */
	SELECT *
	FROM MEMBERS JOIN MEMBERS_MOVIE_RENTAL ON MEMBERS.MEMBER_ID = MEMBERS_MOVIE_RENTAL.MEMBER_ID
	WHERE CAST(RIGHT (MEMBERS.MEMBER_PHONE ,1) AS INTEGER) IN (SELECT NACIONALITY.NACIONALITY_ID FROM NACIONALITY);
/*21-Indica el número de premios a los que estuvo nominado un actor, pero que no ha conseguido (Si una película está nominada a un premio, su actor también lo está)*/
	SELECT ACTORS.ACTOR_NAME, SUM(AWARDS.AWARD_NOMINATION - AWARDS.AWARD_WIN)
	FROM ACTORS JOIN MOVIES_ACTORS ON ACTORS.ACTOR_ID = MOVIES_ACTORS.MOVIE_ID JOIN  AWARDS ON MOVIES_ACTORS.MOVIE_ID = AWARDS.MOVIE_ID
	WHERE AWARDS.AWARD_NOMINATION > 0 AND (AWARDS.AWARD_WIN < AWARDS.AWARD_NOMINATION)
	GROUP BY ACTORS.ACTOR_ID;

/*22-Indica cuantos actores y directores hicieron películas para los estudios no activos*/
/*La Primera fila son los directores y la segunda los actores
 * Hay otra manera de hacerlo con el join y los select distinct sin usar UNION */

	SELECT  COUNT(DISTINCT  ACTORS.ACTOR_ID)
		FROM ACTORS JOIN MOVIES_ACTORS ON ACTORS.ACTOR_ID = MOVIES_ACTORS.ACTOR_ID JOIN MOVIES ON MOVIES_ACTORS.MOVIE_ID = MOVIES.MOVIE_ID JOIN STUDIO ON MOVIES.STUDIO_ID = STUDIO.STUDIO_ID
		WHERE STUDIO.STUDIO_ACTIVE IS FALSE
	UNION
		SELECT COUNT(DISTINCT DIRECTORS.DIRECTOR_ID)
		FROM MOVIES JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID JOIN STUDIO ON MOVIES.STUDIO_ID = STUDIO.STUDIO_ID
		WHERE STUDIO.STUDIO_ACTIVE IS FALSE;

/*23-Indica el nombre, ciudad, y teléfono de todos los miembros del videoclub que hayan alquilado películas que hayan sido nominadas a más de 150 premios y ganaran menos de 50*/

	SELECT MEMBERS.MEMBER_NAME,MEMBERS.MEMBER_TOWN,MEMBER_PHONE
	FROM MEMBERS JOIN MEMBERS_MOVIE_RENTAL ON MEMBERS.MEMBER_ID = MEMBERS_MOVIE_RENTAL.MEMBER_ID
	WHERE MEMBERS_MOVIE_RENTAL.MOVIE_ID  IN (SELECT  MOVIES.MOVIE_ID
		FROM MOVIES JOIN AWARDS ON MOVIES.MOVIE_ID = AWARDS.MOVIE_ID
		GROUP BY MOVIES.MOVIE_ID
		HAVING SUM(AWARDS.AWARD_NOMINATION) > 150 AND SUM(AWARDS.AWARD_WIN) < 50)


/*24-Indica el número de películas que hayan hecho los directores durante las décadas de los 60, 70 y 80 que contengan la palabra "The" en cualquier parte del título*/
		SELECT COUNT(MOVIE_ID) AS Numero_peliculas_entre_1960_y_1990
		FROM MOVIES
		WHERE YEAR(MOVIE_LAUNCH_DATE) >= 1960 AND YEAR(MOVIE_LAUNCH_DATE) < 1990 AND MOVIE_NAME LIKE '%The%' ;

/*25-Indica si hay alguna coincidencia de nacimiento de ciudad (y si las hay, indicarlas) entre los miembros del videoclub y los directores.*/
		SELECT MEMBERS.MEMBER_NAME, DIRECTORS.DIRECTOR_NAME, DIRECTORS.DIRECTOR_BIRTH_PLACE
		FROM MEMBERS JOIN DIRECTORS ON MEMBERS.MEMBER_TOWN = DIRECTORS.DIRECTOR_BIRTH_PLACE;

/*26-Comprueba si hay errores en la BD entre las películas y directores (un director muerto en el 76 no puede dirigir una película en el 88)*/
	SELECT DISTINCT DIRECTORS.DIRECTOR_ID, DIRECTORS.DIRECTOR_NAME
	FROM MOVIES JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	WHERE DIRECTORS.DIRECTOR_BIRTH_DATE > MOVIES.MOVIE_LAUNCH_DATE OR DIRECTORS.DIRECTOR_DEAD_DATE < MOVIES.MOVIE_LAUNCH_DATE ;

/*27-Usando como condición la sentencia anterior, modifica la fecha de defunción a un año más tarde del estreno de la película (mediante sentencia SQL)
 * 26-1995-05-04
 * 46-2001-04-08
 * Sin acabar no se puede usar el from
 * */
	SELECT DIRECTORS.DIRECTOR_DEAD_DATE ,MAX(MOVIES.MOVIE_LAUNCH_DATE) AS ultima_pelicula
		FROM MOVIES JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	WHERE (DIRECTORS.DIRECTOR_BIRTH_DATE > MOVIES.MOVIE_LAUNCH_DATE OR DIRECTORS.DIRECTOR_DEAD_DATE < MOVIES.MOVIE_LAUNCH_DATE)
	AND DIRECTORS.DIRECTOR_DEAD_DATE IS NOT NULL
	GROUP BY DIRECTORS.DIRECTOR_ID;

	UPDATE DIRECTORS
	SET DIRECTORS.DIRECTOR_DEAD_DATE = ultima_pelicula  + INTERVAL '1' YEAR;
	FROM (SELECT DIRECTORS.DIRECTOR_DEAD_DATE ,MAX(MOVIES.MOVIE_LAUNCH_DATE) AS ultima_pelicula
		FROM MOVIES JOIN DIRECTORS ON MOVIES.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
	WHERE (DIRECTORS.DIRECTOR_BIRTH_DATE > MOVIES.MOVIE_LAUNCH_DATE OR DIRECTORS.DIRECTOR_DEAD_DATE < MOVIES.MOVIE_LAUNCH_DATE)
	AND DIRECTORS.DIRECTOR_DEAD_DATE IS NOT NULL
	GROUP BY DIRECTORS.DIRECTOR_ID)
